name: "Teste Execucao em matriz"

on:
  issues:
    types: [opened]

jobs: 

  message-starting-process:
    runs-on: ubuntu-latest
    steps:
      - name: Message
        run: echo "Starting process ..."

  extracting-area-from-issue:
    runs-on: ubuntu-latest
    outputs:
      area: ${{ steps.extract_area.outputs.area }}
      tipo: ${{ steps.extract_area.outputs.area }}
    steps:
      - name: Parsing to Json
        id: parser
        uses: peter-murray/issue-forms-body-parser@v2.0.0
        with: 
          issue_id: ${{ github.event.issue.number }}
          separator: "###"
          label_marker_start: ">>"
          label_marker_end: "<<"

      - name: Extract area from payload
        id: extract_area
        run: |
          AREA=$(echo '${{ steps.parser.outputs.payload }}' | jq -r '.Area')
          echo "area=$AREA" >> $GITHUB_OUTPUT

          TIPO=$(echo '${{ steps.parser.outputs.payload }}' | jq -r '.Tipo')
          echo "tipo=$TIPO" >> $GITHUB_OUTPUT

      - name: Print issue body
        run: echo "${{ toJson(steps.parser.outputs.payload) }}"

  extracting-file-configuration-information:
    runs-on: ubuntu-latest
    needs: extracting-area-from-issue
    outputs:
      area: ${{ steps.extract.outputs.area }}
      zonas_online: ${{ steps.extract.outputs.zonas_online }}
      funcionalidades: ${{ steps.extract.outputs.funcionalidades }}
    steps:
      - name: Extract
        id: extract
        uses: thiagoyuji/teste-actions/.github/actions/extract-config-info@main
        with:
          area: ${{ needs.extracting-area-from-issue.outputs.area }}

  print-information:
    runs-on: ubuntu-latest
    needs: extracting-file-configuration-information
    steps:
      - name: Print information
        run: |
          echo "area: ${{ needs.extracting-file-configuration-information.outputs.area }}"
          echo "zonas_online: ${{ needs.extracting-file-configuration-information.outputs.zonas_online }}"
          echo "funcionalidades: ${{ needs.extracting-file-configuration-information.outputs.funcionalidades }}"

  show-date:
    runs-on: ubuntu-latest
    needs: extracting-file-configuration-information
    if: contains(needs.extracting-file-configuration-information.outputs.funcionalidades, 'show-date')
    steps:
      - name: Show date
        run: date +"%Y-%m-%d"

  show-time:
    runs-on: ubuntu-latest
    needs: extracting-file-configuration-information
    if: contains(needs.extracting-file-configuration-information.outputs.funcionalidades, 'show-time')
    steps:
      - name: Show time
        run: date +"%T"

  process-online:
    runs-on: ubuntu-latest
    needs: [extracting-area-from-issue, extracting-file-configuration-information]
    if: ${{ needs.extracting-area-from-issue.outputs.tipo == 'online' }}
    strategy:
      matrix:
        zone: ${{ fromJson(needs.extracting-file-configuration-information.outputs.zonas_online) }}
    steps:
      - name: Processing
        run: |
          echo "Area: ${{ needs.extracting-file-configuration-information.outputs.area }}"
          echo "Processing zone: ${{ matrix.zone }}"

  process-batch:
    runs-on: ubuntu-latest
    needs: [extracting-area-from-issue, extracting-file-configuration-information]
    if: ${{ needs.extracting-area-from-issue.outputs.tipo == 'batch' }}
    strategy:
      matrix:
        zone: ${{ fromJson(needs.extracting-file-configuration-information.outputs.zonas_online) }}
    steps:
      - name: Processing
        run: |
          echo "Area: ${{ needs.extracting-file-configuration-information.outputs.area }}"
          echo "Processing zone: ${{ matrix.zone }}"

  message-ending-process:
    runs-on: ubuntu-latest
    needs: [process-online, process-batch]
    if: ${{ needs.process-online.result == 'success' || needs.process-batch.result == 'success' }}
    steps:
      - name: Message
        run: echo "Ending process ..."
  
