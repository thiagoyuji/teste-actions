name: "Teste Execucao em matriz"

on:
  issues:
    types: [opened]

jobs: 

  message-starting-process:
    runs-on: ubuntu-latest
    steps:
      - name: Message
        run: echo "Starting process ..."

  extracting-area-from-issue:
    runs-on: ubuntu-latest
    outputs:
      area: ${{ steps.extract_area.outputs.area }}
      tipo: ${{ steps.extract_area.outputs.tipo }}
      trabalho: ${{ steps.extract_area.outputs.trabalho }}
    steps:
      - name: Parsing to Json
        id: parser
        uses: peter-murray/issue-forms-body-parser@v2.0.0
        with: 
          issue_id: ${{ github.event.issue.number }}
          separator: "###"
          label_marker_start: ">>"
          label_marker_end: "<<"

      - name: Extract area from payload
        id: extract_area
        run: |
          AREA=$(echo '${{ steps.parser.outputs.payload }}' | jq -r '.Area')
          echo "area=$AREA" >> $GITHUB_OUTPUT

          TIPO=$(echo '${{ steps.parser.outputs.payload }}' | jq -r '.Tipo')
          echo "tipo=$TIPO" >> $GITHUB_OUTPUT

          TRABALHO=$(echo '${{ steps.parser.outputs.payload }}' | jq -r '.Trabalho')
          echo "trabalho=$TRABALHO" >> $GITHUB_OUTPUT

      - name: Print issue body
        run: echo "${{ toJson(steps.parser.outputs.payload) }}"

  extracting-file-configuration-information:
    runs-on: ubuntu-latest
    needs: extracting-area-from-issue
    outputs:
      area: ${{ steps.extract.outputs.area }}
      zonas_online: ${{ steps.extract.outputs.zonas_online }}
      zonas_batch: ${{ steps.extract.outputs.zonas_batch }}
      funcionalidades: ${{ steps.extract.outputs.funcionalidades }}
      excecoes: ${{ steps.extract.outputs.excecoes }}
    steps:
      - name: Extract
        id: extract
        uses: thiagoyuji/teste-actions/.github/actions/extract-config-info@main
        with:
          area: ${{ needs.extracting-area-from-issue.outputs.area }}

  print-information:
    runs-on: ubuntu-latest
    needs: extracting-file-configuration-information
    steps:
      - name: Print information
        run: |
          echo "area: ${{ needs.extracting-file-configuration-information.outputs.area }}"
          echo "zonas_online: ${{ needs.extracting-file-configuration-information.outputs.zonas_online }}"
          echo "zonas_batch: ${{ needs.extracting-file-configuration-information.outputs.zonas_batch }}"
          echo "funcionalidades: ${{ needs.extracting-file-configuration-information.outputs.funcionalidades }}"
          echo "excecoes: ${{ needs.extracting-file-configuration-information.outputs.excecoes }}"

  extract-parameters-process-exception:
    runs-on: ubuntu-latest
    needs: [extracting-area-from-issue, extracting-file-configuration-information]
    outputs:
      e_excecao: ${{ steps.extract.outputs.e_excecao }}
      zonas_online_excecao: ${{ steps.extract.outputs.zonas_online_excecao }}
      zonas_batch_excecao: ${{ steps.extract.outputs.zonas_batch_excecao }}
    steps:
      - name: Extract
        id: extract
        run: |
          EXCEPTION_EXISTS=$(echo '${{ needs.extracting-file-configuration-information.outputs.excecoes }}' | jq --arg job "${{ needs.extracting-area-from-issue.outputs.trabalho }}" 'map(select(.trabalho == $job))')
          if [ "$EXCEPTION_EXISTS" != "[]" ]; then
              echo "e_excecao=true" >> "$GITHUB_OUTPUT"
              EXCEPTION_DEV_ONLINE_ZONES=$(echo "$EXCEPTION_EXISTS" | jq -c '.[0].zonas.dev.online')
              echo "zonas_online_excecao=$EXCEPTION_DEV_ONLINE_ZONES" >> "$GITHUB_OUTPUT"
              EXCEPTION_DEV_BATCH_ZONES=$(echo "$EXCEPTION_EXISTS" | jq -c '.[0].zonas.dev.batch')
              echo "zonas_batch_excecao=$EXCEPTION_DEV_BATCH_ZONES" >> "$GITHUB_OUTPUT"
          else
              echo "e_excecao=false" >> "$GITHUB_OUTPUT"
          fi          

  show-date:
    runs-on: ubuntu-latest
    needs: extracting-file-configuration-information
    if: contains(needs.extracting-file-configuration-information.outputs.funcionalidades, 'show-date')
    steps:
      - name: Show date
        run: date +"%Y-%m-%d"

  show-time:
    runs-on: ubuntu-latest
    needs: extracting-file-configuration-information
    if: contains(needs.extracting-file-configuration-information.outputs.funcionalidades, 'show-time')
    steps:
      - name: Show time
        run: date +"%T"

  define-zones-for-processing:
    runs-on: ubuntu-latest
    needs: [extracting-area-from-issue, extracting-file-configuration-information, extract-parameters-process-exception]
    steps:
      - name: Define
        run: |
          if [ "${{ needs.extract-parameters-process-exception.outputs.e_excecao }}" == "false" ]; then
              echo "zonas_online=${{ needs.extracting-file-configuration-information.outputs.zonas_online }}" >> $GITHUB_ENV
              echo "zonas_batch=${{ needs.extracting-file-configuration-information.outputs.zonas_batch }}" >> $GITHUB_ENV
          else
              echo "zones_online=${{ needs.extract-parameters-process-exception.outputs.zonas_online_exception }}" >> $GITHUB_ENV
              echo "zonas_batch=${{ needs.extract-parameters-process-exception.outputs.zonas_batch_excecao }}" >> $GITHUB_ENV
          fi

  process-online:
    runs-on: ubuntu-latest
    needs: [extracting-area-from-issue, extracting-file-configuration-information, extract-parameters-process-exception, define-zones-for-processing]
    if: ${{ needs.extracting-area-from-issue.outputs.tipo == 'online' }}
    strategy:
      matrix:
        zone: ${{ fromJson(needs.define-zones-for-processing.outputs.zonas_online) }}
    steps:
      - name: Processing
        run: |
          echo "Area: ${{ needs.extracting-file-configuration-information.outputs.area }}"
          echo "Processing zone: ${{ matrix.zone }}"

  process-batch:
    runs-on: ubuntu-latest
    needs: [extracting-area-from-issue, extracting-file-configuration-information, extract-parameters-process-exception, define-zones-for-processing]
    if: ${{ needs.extracting-area-from-issue.outputs.tipo == 'batch' }}
    strategy:
      matrix:
        zone: ${{ fromJson(needs.define-zones-for-processing.outputs.zonas_batch) }}
    steps:
      - name: Processing
        run: |
          echo "Area: ${{ needs.extracting-file-configuration-information.outputs.area }}"
          echo "Processing zone: ${{ matrix.zone }}"
  
